{"version":3,"file":"default-node_modules_primeng_fesm2015_primeng-orderlist_mjs.js","mappings":"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AAc,CAAC/jB,IAAf,kBAplCmGvgB,+DAolCnG;AAAA,aAAuI,CAACg/B,QAAD,CAAvI;AAAA,YAA6Jzd,wEAA7J;AAAA;;AACA;AAAA,qDArlCmGvhB,gEAqlCnG,CAA2FskC,cAA3F,EAAuH,CAAC;AAC5G57B,IAAAA,IAAI,EAAEhI,oDADsG;AAE5GiI,IAAAA,IAAI,EAAE,CAAC;AACC8X,MAAAA,YAAY,EAAE,CACVqf,WADU,EAEVR,gBAFU,EAGV4D,OAHU,EAIVZ,aAJU,EAKVS,cALU,EAMVJ,kBANU,CADf;AASCjiB,MAAAA,OAAO,EAAE,CACLa,wEADK,EAELue,WAFK,EAGLR,gBAHK,EAIL4D,OAJK,EAKLZ,aALK,EAMLS,cANK,EAOLJ,kBAPK,CATV;AAkBClD,MAAAA,SAAS,EAAE,CAACT,QAAD;AAlBZ,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/@angular/cdk/fesm2015/a11y.mjs","./node_modules/@angular/cdk/fesm2015/drag-drop.mjs","./node_modules/@angular/cdk/fesm2015/keycodes.mjs","./node_modules/@angular/cdk/fesm2015/observers.mjs","./node_modules/primeng/fesm2015/primeng-orderlist.mjs"],"sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        var _a;\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (((_a = this._messagesContainer) === null || _a === void 0 ? void 0 : _a.childNodes.length) === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        var _a;\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        (_a = this._messagesContainer) === null || _a === void 0 ? void 0 : _a.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        var _a, _b;\n        (_b = (_a = this._messageRegistry.get(key)) === null || _a === void 0 ? void 0 : _a.messageElement) === null || _b === void 0 ? void 0 : _b.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.Platform }];\n    } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild === null || focusableChild === void 0 ? void 0 : focusableChild.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        var _a;\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !((_a = target.closest) === null || _a === void 0 ? void 0 : _a.call(target, 'div.cdk-overlay-pane'))) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [FOCUS_TRAP_INERT_STRATEGY]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            var _a, _b;\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if ((_b = (_a = this._options) === null || _a === void 0 ? void 0 : _a.ignoreKeys) === null || _b === void 0 ? void 0 : _b.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = Object.assign(Object.assign({}, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS), options);\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout(() => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout(() => this.clear(), duration);\n                    }\n                }, 100);\n            });\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        clearTimeout(this._previousTimeout);\n        (_a = this._liveElement) === null || _a === void 0 ? void 0 : _a.remove();\n        this._liveElement = null;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                    }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, event, element);\n            }\n        };\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        return this._windowFocused && this._lastFocusOrigin ? this._lastFocusOrigin : 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* EVENTUAL */ ||\n            !!(focusEventTarget === null || focusEventTarget === void 0 ? void 0 : focusEventTarget.contains(this._inputModalityDetector._mostRecentTarget)));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    _emitOrigin(subject, origin) {\n        this._ngZone.run(() => subject.next(origin));\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            case 'rgb(0,0,0)':\n                return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)':\n                return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, imports: [[ObserversModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, (importantProperties === null || importantProperties === void 0 ? void 0 : importantProperties.has(key)) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        var _a, _b;\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            (_a = this._rootElement) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        (_b = this._anchor) === null || _b === void 0 ? void 0 : _b.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        var _a, _b;\n        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._previewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        var _a, _b;\n        (_a = this._placeholder) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._placeholderRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    var _a;\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        var _a;\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = ((_a = this._previewTemplate) === null || _a === void 0 ? void 0 : _a.template) ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        var _a;\n        return (((_a = this._parentPositions.positions.get(this._document)) === null || _a === void 0 ? void 0 : _a.scrollPosition) ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item,\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            var _a;\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = (_a = this._itemPositions.find(current => current.drag === item)) === null || _a === void 0 ? void 0 : _a.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this.sortPredicate(index, item, this) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rjxs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: CdkDropListGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DROP_LIST_GROUP]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }];\n    }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPlaceholder, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPreview, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        var _a;\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            var _a;\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(((_a = CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })) === null || _a === void 0 ? void 0 : _a._dragRef) || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({\n                source: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDrag, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DROP_LIST]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_HANDLE]\n                    }] }, { type: CdkDrag, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }] }];\n    }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        var _a;\n        (_a = this._currentSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i5 from '@angular/cdk/drag-drop';\nimport { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\n\nclass OrderList {\n    constructor(el, cd, filterService) {\n        this.el = el;\n        this.cd = cd;\n        this.filterService = filterService;\n        this.metaKeySelection = true;\n        this.dragdrop = false;\n        this.controlsPosition = 'left';\n        this.filterMatchMode = \"contains\";\n        this.breakpoint = \"960px\";\n        this.disabled = false;\n        this.selectionChange = new EventEmitter();\n        this.trackBy = (index, item) => item;\n        this.onReorder = new EventEmitter();\n        this.onSelectionChange = new EventEmitter();\n        this.onFilterEvent = new EventEmitter();\n        this._selection = [];\n        this.id = UniqueComponentId();\n    }\n    get selection() {\n        return this._selection;\n    }\n    set selection(val) {\n        this._selection = val;\n    }\n    ngOnInit() {\n        if (this.responsive) {\n            this.createStyle();\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'empty':\n                    this.emptyMessageTemplate = item.template;\n                    break;\n                case 'emptyfilter':\n                    this.emptyFilterMessageTemplate = item.template;\n                    break;\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewChecked() {\n        if (this.movedUp || this.movedDown) {\n            let listItems = DomHandler.find(this.listViewChild.nativeElement, 'li.p-highlight');\n            let listItem;\n            if (listItems.length > 0) {\n                if (this.movedUp)\n                    listItem = listItems[0];\n                else\n                    listItem = listItems[listItems.length - 1];\n                DomHandler.scrollInView(this.listViewChild.nativeElement, listItem);\n            }\n            this.movedUp = false;\n            this.movedDown = false;\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        if (this.filterValue) {\n            this.filter();\n        }\n    }\n    onItemClick(event, item, index) {\n        this.itemTouched = false;\n        let selectedIndex = ObjectUtils.findIndexInList(item, this.selection);\n        let selected = (selectedIndex != -1);\n        let metaSelection = this.itemTouched ? false : this.metaKeySelection;\n        if (metaSelection) {\n            let metaKey = (event.metaKey || event.ctrlKey || event.shiftKey);\n            if (selected && metaKey) {\n                this._selection = this._selection.filter((val, index) => index !== selectedIndex);\n            }\n            else {\n                this._selection = (metaKey) ? this._selection ? [...this._selection] : [] : [];\n                ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);\n            }\n        }\n        else {\n            if (selected) {\n                this._selection = this._selection.filter((val, index) => index !== selectedIndex);\n            }\n            else {\n                this._selection = this._selection ? [...this._selection] : [];\n                ObjectUtils.insertIntoOrderedArray(item, index, this._selection, this.value);\n            }\n        }\n        //binding\n        this.selectionChange.emit(this._selection);\n        //event\n        this.onSelectionChange.emit({ originalEvent: event, value: this._selection });\n    }\n    onFilterKeyup(event) {\n        this.filterValue = event.target.value.trim().toLocaleLowerCase(this.filterLocale);\n        this.filter();\n        this.onFilterEvent.emit({\n            originalEvent: event,\n            value: this.visibleOptions\n        });\n    }\n    filter() {\n        let searchFields = this.filterBy.split(',');\n        this.visibleOptions = this.filterService.filter(this.value, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n    }\n    isItemVisible(item) {\n        if (this.filterValue && this.filterValue.trim().length) {\n            for (let i = 0; i < this.visibleOptions.length; i++) {\n                if (item == this.visibleOptions[i]) {\n                    return true;\n                }\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    onItemTouchEnd() {\n        this.itemTouched = true;\n    }\n    isSelected(item) {\n        return ObjectUtils.findIndexInList(item, this.selection) != -1;\n    }\n    isEmpty() {\n        return this.filterValue ? (!this.visibleOptions || this.visibleOptions.length === 0) : (!this.value || this.value.length === 0);\n    }\n    moveUp() {\n        if (this.selection) {\n            for (let i = 0; i < this.selection.length; i++) {\n                let selectedItem = this.selection[i];\n                let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, this.value);\n                if (selectedItemIndex != 0) {\n                    let movedItem = this.value[selectedItemIndex];\n                    let temp = this.value[selectedItemIndex - 1];\n                    this.value[selectedItemIndex - 1] = movedItem;\n                    this.value[selectedItemIndex] = temp;\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.dragdrop && this.filterValue)\n                this.filter();\n            this.movedUp = true;\n            this.onReorder.emit(this.selection);\n        }\n    }\n    moveTop() {\n        if (this.selection) {\n            for (let i = this.selection.length - 1; i >= 0; i--) {\n                let selectedItem = this.selection[i];\n                let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, this.value);\n                if (selectedItemIndex != 0) {\n                    let movedItem = this.value.splice(selectedItemIndex, 1)[0];\n                    this.value.unshift(movedItem);\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.dragdrop && this.filterValue)\n                this.filter();\n            this.onReorder.emit(this.selection);\n            this.listViewChild.nativeElement.scrollTop = 0;\n        }\n    }\n    moveDown() {\n        if (this.selection) {\n            for (let i = this.selection.length - 1; i >= 0; i--) {\n                let selectedItem = this.selection[i];\n                let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, this.value);\n                if (selectedItemIndex != (this.value.length - 1)) {\n                    let movedItem = this.value[selectedItemIndex];\n                    let temp = this.value[selectedItemIndex + 1];\n                    this.value[selectedItemIndex + 1] = movedItem;\n                    this.value[selectedItemIndex] = temp;\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.dragdrop && this.filterValue)\n                this.filter();\n            this.movedDown = true;\n            this.onReorder.emit(this.selection);\n        }\n    }\n    moveBottom() {\n        if (this.selection) {\n            for (let i = 0; i < this.selection.length; i++) {\n                let selectedItem = this.selection[i];\n                let selectedItemIndex = ObjectUtils.findIndexInList(selectedItem, this.value);\n                if (selectedItemIndex != (this.value.length - 1)) {\n                    let movedItem = this.value.splice(selectedItemIndex, 1)[0];\n                    this.value.push(movedItem);\n                }\n                else {\n                    break;\n                }\n            }\n            if (this.dragdrop && this.filterValue)\n                this.filter();\n            this.onReorder.emit(this.selection);\n            this.listViewChild.nativeElement.scrollTop = this.listViewChild.nativeElement.scrollHeight;\n        }\n    }\n    onDrop(event) {\n        let previousIndex = event.previousIndex;\n        let currentIndex = event.currentIndex;\n        if (previousIndex !== currentIndex) {\n            if (this.visibleOptions) {\n                if (this.filterValue) {\n                    previousIndex = ObjectUtils.findIndexInList(event.item.data, this.value);\n                    currentIndex = ObjectUtils.findIndexInList(this.visibleOptions[currentIndex], this.value);\n                }\n                moveItemInArray(this.visibleOptions, event.previousIndex, event.currentIndex);\n            }\n            moveItemInArray(this.value, previousIndex, currentIndex);\n            this.onReorder.emit([event.item.data]);\n        }\n    }\n    onItemKeydown(event, item, index) {\n        let listItem = event.currentTarget;\n        switch (event.which) {\n            //down\n            case 40:\n                var nextItem = this.findNextItem(listItem);\n                if (nextItem) {\n                    nextItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //up\n            case 38:\n                var prevItem = this.findPrevItem(listItem);\n                if (prevItem) {\n                    prevItem.focus();\n                }\n                event.preventDefault();\n                break;\n            //enter\n            case 13:\n                this.onItemClick(event, item, index);\n                event.preventDefault();\n                break;\n        }\n    }\n    findNextItem(item) {\n        let nextItem = item.nextElementSibling;\n        if (nextItem)\n            return !DomHandler.hasClass(nextItem, 'p-orderlist-item') || DomHandler.isHidden(nextItem) ? this.findNextItem(nextItem) : nextItem;\n        else\n            return null;\n    }\n    findPrevItem(item) {\n        let prevItem = item.previousElementSibling;\n        if (prevItem)\n            return !DomHandler.hasClass(prevItem, 'p-orderlist-item') || DomHandler.isHidden(prevItem) ? this.findPrevItem(prevItem) : prevItem;\n        else\n            return null;\n    }\n    moveDisabled() {\n        if (this.disabled || !this.selection.length) {\n            return true;\n        }\n    }\n    createStyle() {\n        if (!this.styleElement) {\n            this.el.nativeElement.children[0].setAttribute(this.id, '');\n            this.styleElement = document.createElement('style');\n            this.styleElement.type = 'text/css';\n            document.head.appendChild(this.styleElement);\n            let innerHTML = `\n                @media screen and (max-width: ${this.breakpoint}) {\n                    .p-orderlist[${this.id}] {\n                        flex-direction: column;\n                    }\n\n                    .p-orderlist[${this.id}] .p-orderlist-controls {\n                        padding: var(--content-padding);\n                        flex-direction: row;\n                    }\n\n                    .p-orderlist[${this.id}] .p-orderlist-controls .p-button {\n                        margin-right: var(--inline-spacing);\n                        margin-bottom: 0;\n                    }\n\n                    .p-orderlist[${this.id}] .p-orderlist-controls .p-button:last-child {\n                        margin-right: 0;\n                    }\n                }\n            `;\n            this.styleElement.innerHTML = innerHTML;\n        }\n    }\n    destroyStyle() {\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n            this.styleElement = null;\n            ``;\n        }\n    }\n    ngOnDestroy() {\n        this.destroyStyle();\n    }\n}\nOrderList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderList, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FilterService }], target: i0.ɵɵFactoryTarget.Component });\nOrderList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.6\", type: OrderList, selector: \"p-orderList\", inputs: { header: \"header\", style: \"style\", styleClass: \"styleClass\", listStyle: \"listStyle\", responsive: \"responsive\", filterBy: \"filterBy\", filterPlaceholder: \"filterPlaceholder\", filterLocale: \"filterLocale\", metaKeySelection: \"metaKeySelection\", dragdrop: \"dragdrop\", controlsPosition: \"controlsPosition\", ariaFilterLabel: \"ariaFilterLabel\", filterMatchMode: \"filterMatchMode\", breakpoint: \"breakpoint\", stripedRows: \"stripedRows\", disabled: \"disabled\", trackBy: \"trackBy\", selection: \"selection\", value: \"value\" }, outputs: { selectionChange: \"selectionChange\", onReorder: \"onReorder\", onSelectionChange: \"onSelectionChange\", onFilterEvent: \"onFilterEvent\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"listViewChild\", first: true, predicate: [\"listelement\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"{'p-orderlist p-component': true, 'p-orderlist-striped': stripedRows, 'p-orderlist-controls-left': controlsPosition === 'left',\n                    'p-orderlist-controls-right': controlsPosition === 'right'}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-orderlist-controls\">\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-up\" (click)=\"moveUp()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-double-up\" (click)=\"moveTop()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-down\" (click)=\"moveDown()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-double-down\" (click)=\"moveBottom()\"></button>\n            </div>\n            <div class=\"p-orderlist-list-container\">\n                <div class=\"p-orderlist-header\" *ngIf=\"header || headerTemplate\">\n                    <div class=\"p-orderlist-title\" *ngIf=\"!headerTemplate\">{{header}}</div>\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                </div>\n                <div class=\"p-orderlist-filter-container\" *ngIf=\"filterBy\">\n                    <div class=\"p-orderlist-filter\">\n                        <input type=\"text\" role=\"textbox\" (keyup)=\"onFilterKeyup($event)\" [disabled]=\"disabled\" class=\"p-orderlist-filter-input p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\" [attr.aria-label]=\"ariaFilterLabel\">\n                        <span class=\"p-orderlist-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <ul #listelement cdkDropList (cdkDropListDropped)=\"onDrop($event)\" class=\"p-orderlist-list\" [ngStyle]=\"listStyle\">\n                    <ng-template ngFor [ngForTrackBy]=\"trackBy\" let-item [ngForOf]=\"value\" let-i=\"index\" let-l=\"last\">\n                        <li class=\"p-orderlist-item\" tabindex=\"0\" [ngClass]=\"{'p-highlight':isSelected(item), 'p-disabled': disabled}\" cdkDrag pRipple [cdkDragData]=\"item\" [cdkDragDisabled]=\"!dragdrop\"\n                            (click)=\"onItemClick($event,item,i)\" (touchend)=\"onItemTouchEnd()\" (keydown)=\"onItemKeydown($event,item,i)\"\n                             *ngIf=\"isItemVisible(item)\" role=\"option\" [attr.aria-selected]=\"isSelected(item)\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngIf=\"isEmpty() && (emptyMessageTemplate || emptyFilterMessageTemplate)\">\n                        <li *ngIf=\"!filterValue || !emptyFilterMessageTemplate\" class=\"p-orderlist-empty-message\">\n                            <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"filterValue\" class=\"p-orderlist-empty-message\">\n                            <ng-container *ngTemplateOutlet=\"emptyFilterMessageTemplate\"></ng-container>\n                        </li>\n                    </ng-container>\n                </ul>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-orderlist{display:flex}.p-orderlist-controls{display:flex;flex-direction:column;justify-content:center}.p-orderlist-list-container{flex:1 1 auto}.p-orderlist-list{list-style-type:none;margin:0;padding:0;overflow:auto;min-height:12rem}.p-orderlist-item{display:block;cursor:pointer;overflow:hidden;position:relative}.p-orderlist-item:not(.cdk-drag-disabled){cursor:move}.p-orderlist-item.cdk-drag-placeholder{opacity:0}.p-orderlist-item.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.p-orderlist.p-state-disabled .p-orderlist-item,.p-orderlist.p-state-disabled .p-button{cursor:default}.p-orderlist.p-state-disabled .p-orderlist-list{overflow:hidden}.p-orderlist-filter{position:relative}.p-orderlist-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-orderlist-filter-input{width:100%}.p-orderlist-controls-right .p-orderlist-controls{order:2}.p-orderlist-controls-right .p-orderlist-list-container{order:1}.p-orderlist-list.cdk-drop-list-dragging .p-orderlist-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.ButtonDirective, selector: \"[pButton]\", inputs: [\"iconPos\", \"loadingIcon\", \"label\", \"icon\", \"loading\"] }, { type: i4.Ripple, selector: \"[pRipple]\" }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: [\"cdkDropListConnectedTo\", \"cdkDropListData\", \"cdkDropListOrientation\", \"id\", \"cdkDropListLockAxis\", \"cdkDropListDisabled\", \"cdkDropListSortingDisabled\", \"cdkDropListEnterPredicate\", \"cdkDropListSortPredicate\", \"cdkDropListAutoScrollDisabled\", \"cdkDropListAutoScrollStep\"], outputs: [\"cdkDropListDropped\", \"cdkDropListEntered\", \"cdkDropListExited\", \"cdkDropListSorted\"], exportAs: [\"cdkDropList\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.CdkDrag, selector: \"[cdkDrag]\", inputs: [\"cdkDragData\", \"cdkDragLockAxis\", \"cdkDragRootElement\", \"cdkDragBoundary\", \"cdkDragStartDelay\", \"cdkDragFreeDragPosition\", \"cdkDragDisabled\", \"cdkDragConstrainPosition\", \"cdkDragPreviewClass\", \"cdkDragPreviewContainer\"], outputs: [\"cdkDragStarted\", \"cdkDragReleased\", \"cdkDragEnded\", \"cdkDragEntered\", \"cdkDragExited\", \"cdkDragDropped\", \"cdkDragMoved\"], exportAs: [\"cdkDrag\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderList, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-orderList', template: `\n        <div [ngClass]=\"{'p-orderlist p-component': true, 'p-orderlist-striped': stripedRows, 'p-orderlist-controls-left': controlsPosition === 'left',\n                    'p-orderlist-controls-right': controlsPosition === 'right'}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-orderlist-controls\">\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-up\" (click)=\"moveUp()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-double-up\" (click)=\"moveTop()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-down\" (click)=\"moveDown()\"></button>\n                <button type=\"button\" [disabled]=\"moveDisabled()\" pButton pRipple icon=\"pi pi-angle-double-down\" (click)=\"moveBottom()\"></button>\n            </div>\n            <div class=\"p-orderlist-list-container\">\n                <div class=\"p-orderlist-header\" *ngIf=\"header || headerTemplate\">\n                    <div class=\"p-orderlist-title\" *ngIf=\"!headerTemplate\">{{header}}</div>\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                </div>\n                <div class=\"p-orderlist-filter-container\" *ngIf=\"filterBy\">\n                    <div class=\"p-orderlist-filter\">\n                        <input type=\"text\" role=\"textbox\" (keyup)=\"onFilterKeyup($event)\" [disabled]=\"disabled\" class=\"p-orderlist-filter-input p-inputtext p-component\" [attr.placeholder]=\"filterPlaceholder\" [attr.aria-label]=\"ariaFilterLabel\">\n                        <span class=\"p-orderlist-filter-icon pi pi-search\"></span>\n                    </div>\n                </div>\n                <ul #listelement cdkDropList (cdkDropListDropped)=\"onDrop($event)\" class=\"p-orderlist-list\" [ngStyle]=\"listStyle\">\n                    <ng-template ngFor [ngForTrackBy]=\"trackBy\" let-item [ngForOf]=\"value\" let-i=\"index\" let-l=\"last\">\n                        <li class=\"p-orderlist-item\" tabindex=\"0\" [ngClass]=\"{'p-highlight':isSelected(item), 'p-disabled': disabled}\" cdkDrag pRipple [cdkDragData]=\"item\" [cdkDragDisabled]=\"!dragdrop\"\n                            (click)=\"onItemClick($event,item,i)\" (touchend)=\"onItemTouchEnd()\" (keydown)=\"onItemKeydown($event,item,i)\"\n                             *ngIf=\"isItemVisible(item)\" role=\"option\" [attr.aria-selected]=\"isSelected(item)\">\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngIf=\"isEmpty() && (emptyMessageTemplate || emptyFilterMessageTemplate)\">\n                        <li *ngIf=\"!filterValue || !emptyFilterMessageTemplate\" class=\"p-orderlist-empty-message\">\n                            <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\n                        </li>\n                        <li *ngIf=\"filterValue\" class=\"p-orderlist-empty-message\">\n                            <ng-container *ngTemplateOutlet=\"emptyFilterMessageTemplate\"></ng-container>\n                        </li>\n                    </ng-container>\n                </ul>\n            </div>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-orderlist{display:flex}.p-orderlist-controls{display:flex;flex-direction:column;justify-content:center}.p-orderlist-list-container{flex:1 1 auto}.p-orderlist-list{list-style-type:none;margin:0;padding:0;overflow:auto;min-height:12rem}.p-orderlist-item{display:block;cursor:pointer;overflow:hidden;position:relative}.p-orderlist-item:not(.cdk-drag-disabled){cursor:move}.p-orderlist-item.cdk-drag-placeholder{opacity:0}.p-orderlist-item.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.p-orderlist.p-state-disabled .p-orderlist-item,.p-orderlist.p-state-disabled .p-button{cursor:default}.p-orderlist.p-state-disabled .p-orderlist-list{overflow:hidden}.p-orderlist-filter{position:relative}.p-orderlist-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-orderlist-filter-input{width:100%}.p-orderlist-controls-right .p-orderlist-controls{order:2}.p-orderlist-controls-right .p-orderlist-list-container{order:1}.p-orderlist-list.cdk-drop-list-dragging .p-orderlist-item:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FilterService }]; }, propDecorators: { header: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], listStyle: [{\n                type: Input\n            }], responsive: [{\n                type: Input\n            }], filterBy: [{\n                type: Input\n            }], filterPlaceholder: [{\n                type: Input\n            }], filterLocale: [{\n                type: Input\n            }], metaKeySelection: [{\n                type: Input\n            }], dragdrop: [{\n                type: Input\n            }], controlsPosition: [{\n                type: Input\n            }], ariaFilterLabel: [{\n                type: Input\n            }], filterMatchMode: [{\n                type: Input\n            }], breakpoint: [{\n                type: Input\n            }], stripedRows: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], trackBy: [{\n                type: Input\n            }], onReorder: [{\n                type: Output\n            }], onSelectionChange: [{\n                type: Output\n            }], onFilterEvent: [{\n                type: Output\n            }], listViewChild: [{\n                type: ViewChild,\n                args: ['listelement']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], selection: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\nclass OrderListModule {\n}\nOrderListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrderListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderListModule, declarations: [OrderList], imports: [CommonModule, ButtonModule, SharedModule, RippleModule, DragDropModule], exports: [OrderList, SharedModule, DragDropModule] });\nOrderListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderListModule, imports: [[CommonModule, ButtonModule, SharedModule, RippleModule, DragDropModule], SharedModule, DragDropModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.6\", ngImport: i0, type: OrderListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ButtonModule, SharedModule, RippleModule, DragDropModule],\n                    exports: [OrderList, SharedModule, DragDropModule],\n                    declarations: [OrderList]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrderList, OrderListModule };\n"],"names":["DOCUMENT","i0","Injectable","Inject","QueryList","Directive","Input","InjectionToken","Optional","EventEmitter","Output","NgModule","i1","_getFocusedElementPierceShadowDom","normalizePassiveListenerOptions","_getEventTarget","_getShadowRoot","Subject","Subscription","BehaviorSubject","of","hasModifierKey","A","Z","ZERO","NINE","END","HOME","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","ALT","CONTROL","MAC_META","META","SHIFT","tap","debounceTime","filter","map","take","skip","distinctUntilChanged","takeUntil","coerceBooleanProperty","coerceElement","i1$1","ObserversModule","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","val","length","removeAttribute","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","constructor","_document","_platform","_messageRegistry","Map","_messagesContainer","_id","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_a","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","ngOnDestroy","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","_b","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","add","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","Platform","ɵprov","type","args","providedIn","undefined","decorators","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_homeAndEnd","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","enabled","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","ngDevMode","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","withHomeAndEnd","previousActiveItem","updateActiveItem","next","onKeydown","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","setFirstItemActive","setLastItemActive","toLocaleUpperCase","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByIndex","_setActiveItemByDelta","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","window","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","value","_startAnchor","_endAnchor","_toggleAnchorTabIndex","destroy","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","NgZone","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","nativeElement","autoCapture","_autoCapture","ngAfterContentInit","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","ElementRef","ɵdir","selector","exportAs","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","defer","register","deregister","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","closest","call","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","ConfigurableFocusTrapFactory","configObject","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","TOUCH_BUFFER_MS","modalityEventListenerOptions","passive","capture","InputModalityDetector","ngZone","document","_mostRecentTarget","_modality","_lastTouchMs","_onKeydown","_options","_onMousedown","Date","now","_onTouchstart","Object","assign","modalityDetected","modalityChanged","mostRecentModality","complete","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","factory","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","ContentObserver","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","parentElement","_detectionMode","detectionMode","monitor","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","focusedElement","_getClosestElementsInfo","forEach","currentElement","_originChanged","_setOrigin","_info","_getWindow","doc","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","run","rootNodeFocusListeners","modality","results","CdkMonitorFocus","_focusMonitor","cdkFocusChange","ngAfterViewInit","_monitorSubscription","emit","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","_applyBodyHighContrastModeCssClasses","_hasCheckedHighContrastMode","bodyClasses","mode","A11yModule","highContrastModeDetector","ɵmod","ɵinj","imports","declarations","exports","SkipSelf","Self","ContentChildren","ContentChild","coerceArray","coerceNumberProperty","interval","animationFrameScheduler","Observable","merge","startWith","switchMap","CdkScrollableModule","i3","extendStyles","dest","source","importantProperties","hasOwnProperty","setProperty","removeProperty","toggleNativeDragInteractions","enable","userSelect","toggleVisibility","top","opacity","left","combineTransforms","transform","initialTransform","parseCssTimeUnitsToMs","multiplier","parseFloat","getTransformTransitionDurationInMs","transitionedProperties","parseCssPropertyValue","property","find","prop","propertyIndex","rawDurations","rawDelays","name","getPropertyValue","split","part","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","positions","cache","elements","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","handleScroll","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","transferCanvasData","transferInputData","transferData","callback","descendantElements","cloneElements","cloneUniqueId","context","getContext","drawImage","passiveEventListenerOptions","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","_config","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","newValue","_toggleNativeDragInteractions","handle","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","withPreviewTemplate","template","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","reset","disableHandle","enableHandle","withDirection","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","placeholder","_createPlaceholderElement","createComment","shadowRoot","_createPreviewElement","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","previousIndex","previousContainer","drop","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","Array","isArray","className","placeholderRect","propertyName","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","wrapper","sourceRect","moveItemInArray","array","fromIndex","toIndex","from","clamp","to","transferArrayItem","currentArray","targetArray","targetIndex","copyArrayItem","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_draggables","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","_cacheItemPositions","_cacheParentPositions","_reset","withItems","previousItems","draggedItems","_cacheItems","connectedTo","slice","withOrientation","orientation","_scrollableElements","reverse","findIndex","currentItem","size","pointerDelta","_clientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","sibling","isDraggedItem","offset","elementToOffset","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","elementToMeasure","sort","a","b","current","_stopReceiving","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","_canReceive","elementFromPoint","_startReceiving","activeSiblings","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","startsWith","_clearGlobalListeners","streams","observer","eventOptions","instance","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","provide","useExisting","providers","CDK_DRAG_CONFIG","assertElementNode","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","_destroyed","_unsortedItems","_dropListRef","data","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","draggingDisabled","listAutoScrollDisabled","listOrientation","ChangeDetectorRef","ScrollDispatcher","Directionality","useValue","host","CDK_DRAG_HANDLE","CdkDragHandle","parentDrag","_stateChanges","_parentDrag","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","_updateRootElement","_setupHandlesListener","freeDragPosition","rootSelectorChange","positionChange","rootElementSelector","_getBoundaryElement","boundary","dir","childHandleElements","handleInstance","dragRef","ViewContainerRef","descendants","DragDropModule","MutationObserverFactory","MutationObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","stream","_observeElement","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","CdkObserveContent","_currentSubscription","_unsubscribe","_subscribe","debounce","_debounce","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","i2","CommonModule","ButtonModule","PrimeTemplate","SharedModule","DomHandler","UniqueComponentId","ObjectUtils","i4","RippleModule","i5","OrderList","cd","filterService","metaKeySelection","dragdrop","controlsPosition","filterMatchMode","breakpoint","selectionChange","trackBy","onReorder","onSelectionChange","onFilterEvent","_selection","selection","ngOnInit","responsive","createStyle","templates","getType","itemTemplate","emptyMessageTemplate","emptyFilterMessageTemplate","headerTemplate","ngAfterViewChecked","movedUp","movedDown","listItems","listViewChild","listItem","scrollInView","_value","filterValue","onItemClick","itemTouched","selectedIndex","findIndexInList","selected","metaSelection","metaKey","ctrlKey","shiftKey","insertIntoOrderedArray","originalEvent","onFilterKeyup","toLocaleLowerCase","filterLocale","visibleOptions","searchFields","filterBy","isItemVisible","onItemTouchEnd","isSelected","isEmpty","moveUp","selectedItem","selectedItemIndex","movedItem","temp","moveTop","unshift","moveDown","moveBottom","onDrop","onItemKeydown","currentTarget","which","nextItem","findNextItem","prevItem","findPrevItem","nextElementSibling","hasClass","isHidden","previousElementSibling","moveDisabled","styleElement","head","innerHTML","destroyStyle","removeChild","FilterService","ɵcmp","NgClass","NgStyle","ButtonDirective","Ripple","NgIf","NgTemplateOutlet","NgForOf","changeDetection","OnPush","encapsulation","None","header","styleClass","listStyle","filterPlaceholder","ariaFilterLabel","stripedRows","OrderListModule"],"sourceRoot":"webpack:///"}